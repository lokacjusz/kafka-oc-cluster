apiVersion: v1
kind: Service
metadata:
  name: kafka-persistent
  labels:
    app: kafka-persistent
    component: kafka
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - port: 9092
    name: server
  clusterIP: None
  selector:
    app: kafka-persistent
    component: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-persistent
  labels:
    app: kafka-persistent
    component: kafka
#  annotations:
## Use this annotation if you want allocate each pod on different node
## Note the number of nodes must be upper than REPLICAS parameter.
#        scheduler.alpha.kubernetes.io/affinity: >
#          {
#            "podAntiAffinity": {
#              "requiredDuringSchedulingIgnoredDuringExecution": [{
#                "labelSelector": {
#                  "matchExpressions": [{
#                    "key": "app",
#                    "operator": "In",
#                    "values": ["kafka"]
#                  }]
#                },
#                "topologyKey": "kubernetes.io/hostname"
#              }]
#            }
#          }
spec:
  serviceName: kafka-persistent
  selector:
    matchLabels:
      app: kafka-persistent
      component: kafka
  replicas: 3
  podManagementPolicy: "Parallel"
  template:
    metadata:
      labels:
        app: kafka-persistent
        component: kafka
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: kafka
        imagePullPolicy: IfNotPresent
        image: engapa/kafka:2.13-2.5.0
        resources:
          requests:
            memory: 512M
            cpu: 300m
          limits:
            memory: 512M
            cpu: 300m
        ports:
        - containerPort: 9092
          name: broker-port
        env:
        - name:  KAFKA_REPLICAS
          value: "3"
        - name:  KAFKA_ZK_LOCAL
          value: "false"
        - name:  KAFKA_HEAP_OPTS
          value: "-Xmx250M -Xms250M"
        - name:  SERVER_num_partitions
          value: "1"
        - name:  SERVER_delete_topic_enable
          value: "true"
        - name:  SERVER_log_retention_hours
          value: "2147483647"
        - name:  SERVER_zookeeper_connect
          value: "zk-0.zk:2181,zk-1.zk:2181,zk-2.zk:2181"
        - name:  SERVER_log_dirs
          value: "/opt/kafka/data/logs"
        - name:  SERVER_zookeeper_connection_timeout_ms
          value: "300000"
        livenessProbe:
          exec:
            command:
            - kafka_server_status.sh
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - kafka_server_status.sh
          initialDelaySeconds: 30
          timeoutSeconds: 5
        volumeMounts:
        - name: data
          mountPath: /opt/kafka/data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
